# Generated by Django 3.0.5 on 2020-11-29 23:17

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AppName', models.CharField(blank=True, max_length=255)),
                ('who_we_are', ckeditor.fields.RichTextField(blank=True, help_text='Image content is not allowed here', verbose_name="Anything here will be shown as the new 'Who we are section on the website'")),
                ('what_we_do', ckeditor.fields.RichTextField(blank=True, help_text='Image content is not allowed here', verbose_name="Anything here will be shown as the new 'What we do section on the website'")),
                ('Where_we_are', models.CharField(blank=True, max_length=100, verbose_name='Your address to be shown in the footer')),
                ('our_official_phone', models.CharField(blank=True, help_text='If provided, this will be shown in the footer as an email', max_length=14)),
                ('our_official_email', models.CharField(blank=True, help_text='Also if provided, it will be shown in the footer as the phone number, please include the Country code', max_length=50)),
                ('goals', ckeditor.fields.RichTextField(blank=True, help_text='Image content is not allowed here', verbose_name="Anything here will be shown as the new 'goals/objectives'")),
                ('vision', ckeditor.fields.RichTextField(blank=True, help_text='Image content is not allowed here', verbose_name="Anything here will be shown as the vision on the 'vision section on the website'")),
                ('Summary_Of_About_Us_to_show_in_footer', models.CharField(max_length=255)),
                ('Use_New_App_Name', models.BooleanField(default=False)),
                ('Use_New_Who_We_Are', models.BooleanField(default=False)),
                ('Use_New_What_We_Do', models.BooleanField(default=False)),
                ('Use_New_Where_We_Are', models.BooleanField(default=False)),
                ('Use_New_Goals', models.BooleanField(default=False)),
                ('Use_New_Vision', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'About the site',
                'verbose_name_plural': 'About the site',
            },
        ),
        migrations.CreateModel(
            name='AboutTheParty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vision', ckeditor.fields.RichTextField(blank=True, help_text='Image content is not allowed here', verbose_name='Vision of the party')),
                ('mission', ckeditor.fields.RichTextField(blank=True, help_text='Image content is not allowed here', verbose_name='The mission of the party')),
                ('Goals', ckeditor.fields.RichTextField(blank=True, help_text='Image content is not allowed here', verbose_name='The goalsof the party')),
                ('background', ckeditor.fields.RichTextField(blank=True, help_text='Image content is not allowed here', verbose_name='How the party came into existence')),
                ('Use_New_About_The_Party', models.BooleanField(default=False)),
                ('why_nrm', ckeditor.fields.RichTextField()),
            ],
            options={
                'verbose_name': 'About the party',
                'verbose_name_plural': 'About the party',
            },
        ),
        migrations.CreateModel(
            name='Prospective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('short_description', models.TextField()),
                ('Image', models.ImageField(blank=True, help_text='If you have added a video, do not add this, else only the image will be shown', null=True, upload_to='blog_posts_images', validators=[django.core.validators.validate_image_file_extension], verbose_name='Add an image attachment')),
                ('Video', models.FileField(blank=True, help_text='If you have added an image, do not add this, else only the image will be shown', null=True, upload_to='')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('is_published', models.BooleanField(default=False, help_text='This will enable you to publish your post when you want to')),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Was_uploaded_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Prospective',
                'verbose_name_plural': 'Prospectives',
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Image', models.ImageField(blank=True, help_text='If you have added a video, do not add this, else only the image will be shown', null=True, upload_to='gallery_images', validators=[django.core.validators.validate_image_file_extension], verbose_name='Add an image attachment')),
                ('short_description', models.CharField(max_length=100)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('is_published', models.BooleanField(default=False, help_text='This will enable you to publish your post when you want to')),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Added_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Gallery',
                'verbose_name_plural': 'Galleries',
            },
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('post', models.CharField(max_length=255)),
                ('area', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('short_bio', models.CharField(max_length=255)),
                ('profile', ckeditor.fields.RichTextField()),
                ('image', models.ImageField(upload_to='candidates', validators=[django.core.validators.validate_image_file_extension])),
                ('is_published', models.BooleanField(default=False)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Registered_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'NRM candidate',
                'verbose_name_plural': 'NRM candidates',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('post_body', ckeditor.fields.RichTextField(help_text='Image content is not allowed here', verbose_name='Body of the blog')),
                ('Image', models.ImageField(blank=True, help_text='If you have added a video, do not add this, else only the image will be shown', null=True, upload_to='blog_files', validators=[django.core.validators.validate_image_file_extension], verbose_name='Add an image attachment')),
                ('Video', models.FileField(blank=True, help_text='If you have added an image, do not add this, else only the image will be shown', null=True, upload_to='blog_files')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('is_published', models.BooleanField(default=False, help_text='This will enable you to publish your post when you want to')),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Posted_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blog',
                'verbose_name_plural': 'Blogs',
            },
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('short_description', models.TextField()),
                ('Image', models.ImageField(blank=True, help_text='If you have added a video, do not add this, else only the image will be shown', null=True, upload_to='blog_posts_images', validators=[django.core.validators.validate_image_file_extension], verbose_name='Add an image attachment')),
                ('Video', models.FileField(blank=True, help_text='If you have added an image, do not add this, else only the image will be shown', null=True, upload_to='')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('is_published', models.BooleanField(default=False, help_text='This will enable you to publish your post when you want to')),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Uploaded_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Achievement',
                'verbose_name_plural': 'Achievements',
            },
        ),
    ]
